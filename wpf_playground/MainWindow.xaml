<Window x:Class="wpf_playground.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:wpf_playground"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <!--  There can only be one child inside teh Window. So StackPanel must bewithin Grid if both are wanted.    -->
    <Grid>
      <!-- <TextBlock x:Name = "textBlock" HorizontalAlignment = "Left"
         Margin = "235,143,0,0" TextWrapping = "Wrap" Text = "Hello World!"
         VerticalAlignment = "Top" Height = "44" Width = "102" />  -->

      <StackPanel HorizontalAlignment="Left">
        <Button Content="Generate" VerticalAlignment="Center" Width="75" Margin="100,10,0,0" Padding="0,50,0,0"/>
          <!-- <Button>Button 1</Button> -->
      </StackPanel>

      <StackPanel HorizontalAlignment="Right">
        <Button Content="Sort"  VerticalAlignment="Center" Width="75" Margin="-500,10,0,0" Padding="0,50,0,0"/>
      </StackPanel>

      <StackPanel HorizontalAlignment="Right">
        <!-- Pixel Map  -->
      </StackPanel>

<Image Width="200" 
Source="C:\Users\lukeg\OneDrive\Desktop\cloudShare\code\playground\wpf_playground\SampImg.jpg"/>

<Image Width="200">
  <Image.Source>
    <!-- To save significant application memory, set the DecodePixelWidth or  
     DecodePixelHeight of the BitmapImage value of the image source to the desired 
     height and width of the rendered image. If you don't do this, the application will 
     cache the image as though it were rendered as its normal size rather then just 
     the size that is displayed. -->
    <!-- Note: In order to preserve aspect ratio, only set either DecodePixelWidth
         or DecodePixelHeight but not both. -->
    <BitmapImage DecodePixelWidth="200"  
     UriSource="C:\Users\lukeg\OneDrive\Desktop\cloudShare\code\playground\wpf_playground\SampImg.jpg"/>
  </Image.Source>
</Image>



    <!-- <Canvas Height="300" Width="300">

      Draws a diagonal line from (10,10) to (50,50).
      <Line
        X1="10" Y1="10"
        X2="50" Y2="50"
        Stroke="Black"
        StrokeThickness="4" />

      Draws a diagonal line from (10,10) to (50,50)
          and moves it 100 pixels to the right. 
      <Line
        X1="10" Y1="10"
        X2="50" Y2="50"
        StrokeThickness="4"
        Canvas.Left="100">
        <Line.Stroke>
          <RadialGradientBrush GradientOrigin="0.5,0.5" Center="0.5,0.5" RadiusX="0.5" RadiusY="0.5">
            <RadialGradientBrush.GradientStops>
              <GradientStop Color="Red" Offset="0" />
              <GradientStop Color="Blue" Offset="0.25" />
            </RadialGradientBrush.GradientStops>
          </RadialGradientBrush>
        </Line.Stroke>
      </Line>

      Draws a horizontal line from (10,60) to (150,60).
      <Line
        X1="10" Y1="60"
        X2="150" Y2="60"
        Stroke="Black"
        StrokeThickness="4"/>

    </Canvas> -->




    <!-- <Button> 
        <Button.Content>Click Me</Button.Content> 
        <Button.Height>30</Button.Height> 
        <Button.Width>60</Button.Width> 
    </Button>  -->

    </Grid>

</Window>
